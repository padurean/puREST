package database

import (
	"github.com/padurean/purest/env"
)

var dbUser string
var dbSchema string
var schemaSQL string

func init() {
	dbUser = env.GetDbUser()
	dbSchema = env.GetDbSchema()

	schemaSQL = `
		CREATE SCHEMA IF NOT EXISTS ` + dbSchema + ` AUTHORIZATION ` + dbUser + `;
		CREATE TABLE IF NOT EXISTS ` + dbSchema + `.user (
			id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			username character varying(255) NOT NULL,
			password character varying(60) NOT NULL,
			email character varying(255) NOT NULL,
			first_name character varying(255),
			last_name character varying(255),
			created timestamp with time zone NOT NULL DEFAULT now(),
			updated timestamp with time zone NOT NULL DEFAULT now(),
			deleted timestamp with time zone
		);
		CREATE UNIQUE INDEX IF NOT EXISTS user_username_unique_idx ON ` + dbSchema + `.user (username);
		CREATE UNIQUE INDEX IF NOT EXISTS user_email_unique_idx ON ` + dbSchema + `.user (email);
		CREATE INDEX IF NOT EXISTS user_created_idx ON ` + dbSchema + `.user (created);
		CREATE INDEX IF NOT EXISTS user_updated_idx ON ` + dbSchema + `.user (updated);
		CREATE INDEX IF NOT EXISTS user_deleted_idx ON ` + dbSchema + `.user (deleted);
	`
}

// !!! >>>>>>>>>
// TODO OGG: just some examples, remove them when not needed anymore:
// CREATE TABLE IF NOT EXISTS person (
// 	first_name text,
// 	last_name text,
// 	email text
// );

// ALTER TABLE IF EXISTS ONLY person
// ADD COLUMN IF NOT EXISTS phone_number VARCHAR(255);

// CREATE TABLE IF NOT EXISTS place (
// 	country text,
// 	city text NULL,
// 	telcode integer

// // Person ...
// type Person struct {
// 	FirstName   string `db:"first_name"`
// 	LastName    string `db:"last_name"`
// 	Email       string
// 	PhoneNumber sql.NullString `db:"phone_number"`
// }

// // Place ...
// type Place struct {
// 	Country string
// 	City    sql.NullString
// 	TelCode int
// }
// !!! <<<<<<<<<

// Migrate ...
func Migrate(db *DB) {
	// exec the schema or fail; multi-statement Exec behavior varies between
	// database drivers;  pq will exec them all, sqlite3 won't, ymmv
	db.MustExec(schemaSQL)
}
